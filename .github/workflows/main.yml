name: python-deployment

run-name: ${{ github.actor }} - ${{ github.ref_name }} -${{ github.sha }}

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]

env:
  PythonVersion: 3.8
  DockerImageName: my-python-app

jobs:
  python-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PythonVersion }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r requirements.txt

      - name: Run tests
        run: python manage.py test

      - name: Generate Report
        run: |
          coverage run --source='.' manage.py test
          coverage report

      - name: Linting
        run: flake8 . --show-source --statistics --exit-zero

      - name: Check Complexity
        run: flake8 . --exit-zero --max-complexity=6

      - name: Upload python artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: .

      - name: Upload helm artifacts
        uses: actions/upload-artifact@v4
        with:
          name: helm-artifacts
          path: ./helm-charts/todoapp

  docker-ci:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' && github.ref_name == 'develop') ||
      (github.event_name == 'pull_request' && github.base_ref == 'develop')
    needs: python-ci
    steps:
      - name: Download python artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-artifacts
          path: .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./src
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DockerImageName }}:${{ github.sha }}

  helm-ci:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' && github.ref_name == 'develop') ||
      (github.event_name == 'pull_request' && github.base_ref == 'develop')
    needs: python-ci
    steps:
      - name: Download helm artifacts
        uses: actions/download-artifact@v4
        with:
          name: helm-artifacts
          path: ./chart

      - name: Helm template
        run: helm template todoapp ./chart

      - name: Helm lint
        run: helm lint ./chart

      - name: Package chart
        run: helm package ./chart --destination ./chart-packages

      - name: Upload chart package
        uses: actions/upload-artifact@v4
        with:
          name: chart-package
          path: ./chart-packages/*.tgz

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Helm CI results"
          branch: helm-ci-pr
          title: "Helm CI Updates"
          body: |
            This PR includes Helm chart changes.
            Successful Helm CI run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
